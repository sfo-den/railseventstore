[
  {
    "url": "https://kickstarter.engineering/event-sourcing-made-simple-4a2625113224",
    "title": "Event Sourcing made Simple"
  },
  {
    "url": "https://www.briisk.co/event-driven-architecture-and-ddd/",
    "title": "What I learned from using Event Driven Architecture and DDD"
  },
  {
    "url": "https://epublications.vu.lt/object/elaba:23166769/23166769.pdf",
    "title": "Reaktyvus programavimas įvykių kaupimo sistemose"
  },
  {
    "url": "https://blog.arkency.com/rewriting-deprecated-apis-with-parser-gem/",
    "title": "Rewriting deprecated APIs with parser gem"
  },
  {
    "url": "https://blog.arkency.com/ruby-event-store-use-without-rails/",
    "title": "Ruby Event Store - use without Rails"
  },
  {
    "url": "https://blog.arkency.com/rails-event-store-better-apis-coming/",
    "title": "Rails Event Store - better APIs coming"
  },
  {
    "url": "https://blog.arkency.com/process-managers-revisited/",
    "title": "Process Managers revisited"
  },
  {
    "url": "https://blog.arkency.com/how-to-get-audit-log-with-railseventstore/",
    "title": "How to get an audit log with RailsEventStore today"
  },
  {
    "url": "http://andrzejsliwa.com/thoughs-after-rails-domain-driven-desgin-workshop.html",
    "title": "Thoughts after Rails + Domain Driven Design workshop"
  },
  {
    "url": "https://blog.arkency.com/composable-rspec-matchers/",
    "title": "Composable RSpec matchers"
  },
  {
    "url": "https://blog.arkency.com/2016-12-30-event-sourced-domain-objects-in-less-than-150-loc",
    "title": "Event sourced domain objects in less than 150 LOC"
  },
  {
    "url": "https://blog.arkency.com/2016-07-10-domain-events-schema-definitions",
    "title": "Domain Events Schema Definitions"
  },
  {
    "url": "https://blog.arkency.com/2016-05-09-the-anatomy-of-domain-event",
    "title": "The anatomy of Domain Event"
  },
  {
    "url": "https://blog.arkency.com/2016-01-26-one-event-to-rule-them-all",
    "title": "One event to rule them all"
  },
  {
    "url": "http://fhwang.net/g/Event-Sourcing-Libraries-in-Ruby-A-Guide",
    "title": "Event Sourcing Libraries in Ruby: A Guide"
  },
  {
    "url": "https://blog.arkency.com/2015-09-22-testing-event-sourced-application-the-read-side",
    "title": "Testing Event Sourced application - the read side"
  },
  {
    "url": "https://blog.arkency.com/2015-07-07-testing-event-sourced-application",
    "title": "Testing an Event Sourced application"
  },
  {
    "url": "https://blog.arkency.com/2015-06-12-subscribing-for-events-in-rails-event-store",
    "title": "Subscribing for events in rails_event_store"
  },
  {
    "url": "https://blog.arkency.com/2015-05-15-using-domain-events-as-success-slash-failure-messages/",
    "title": "Using domain events as successfailure messages"
  },
  {
    "url": "https://blog.arkency.com/2015-05-14-introducing-read-models-in-your-legacy-application",
    "title": "Introducing Read Models in your legacy application"
  },
  {
    "url": "https://blog.arkency.com/2015-05-05-building-an-event-sourced-application-using-rails-event-store",
    "title": "Building an Event Sourced application using rails_event_store"
  },
  {
    "url": "http://blog.arkency.com/2015/03/why-use-event-sourcing/",
    "title": "Why use Event Sourcing"
  },
  {
    "url": "http://blog.arkency.com/2015/04/the-event-store-for-rails-developers/",
    "title": "The Event Store for Rails developers"
  },
  {
    "url": "http://blog.arkency.com/2015/03/fast-introduction-to-event-sourcing-for-ruby-programmers/",
    "title": "Fast introduction to Event Sourcing for Ruby programmers"
  },
  {
    "url": "http://blog.arkency.com/2015/04/why-i-want-to-introduce-mutation-testing-to-the-rails-event-store-gem/",
    "title": "Why I want to introduce mutation testing to the rails_event_store gem"
  }
]
