require "yaml"

gems = %w(
  aggregate_root
  bounded_context
  ruby_event_store
  ruby_event_store-browser
  ruby_event_store-rom
  rails_event_store
  rails_event_store_active_record
  rails_event_store_active_record-legacy
  rails_event_store-rspec
)

mutate_gem = ->(gem_name) do
  {
    gem_name => {
      "docker" => [
        { "image" => "circleci/ruby:2.6.0-node-browsers" }
      ],
      "steps" => [
        "checkout",
        { "run" => "cd #{gem_name} && make install mutate" }
      ]
    }
  }
end

check_config = {
  "check_config" => {
    "docker" => [
      { "image" => "circleci/ruby:2.6.0-node-browsers" }
    ],
    "steps" => [
      "checkout",
      "run" => {
        "name" => "Verify .circleci/config.yml is generated by running ruby .circleci/config.rb",
        "command" => %q[WAS="$(md5sum .circleci/config.yml)" && ruby .circleci/config.rb && test "$WAS" == "$(md5sum .circleci/config.yml)"]
      }
    ]
  }
}

config =
  {
    "version" => 2,
    "jobs" => gems.inject(check_config) { |acc, item| acc.merge(mutate_gem.(item)) },
    "workflows" => {
      "version" => 2,
      "test_mutate" => {
        "jobs" => %w(check_config) + gems
      }
    }
  }


File.open(".circleci/config.yml", "w") do |file|
  file << <<~EOS
    # This file is generated by .circleci/config.rb, do not edit it manually!
    # Edit .circleci/config.rb and run ruby .circleci/config.rb
  EOS
  file << YAML.dump(config).gsub("---", "")
end
